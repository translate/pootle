#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Sample development configuration file.

This file includes settings that are suited for hacking Pootle. For further
customizations, you can find the defaults in the ``*.conf`` files.

In order for this configuration changes to take effect, bear in mind that you
need to change the extension of this file from ``.conf.sample`` to ``.conf``.
"""

#
# Base
#

# General Django debugging settings

# Enable Django debug mode
# https://docs.djangoproject.com/en/dev/ref/settings/#debug
DEBUG = True

# Whether to debug template rendering
# https://docs.djangoproject.com/en/dev/ref/settings/#template-debug
TEMPLATE_DEBUG = DEBUG


#
# Backends
#

# Database backend settings
DATABASES = {
    'default': {
        # Although has issues with locking, SQLite is handy for development
        'ENGINE': 'django.db.backends.sqlite3',
        # Database name or path to database file if using sqlite3.
        'NAME': working_path('dbs/pootle.db'),
        # Not used with sqlite3.
        'USER': '',
        # Not used with sqlite3.
        'PASSWORD': '',
        # Set to empty string for localhost. Not used with sqlite3.
        'HOST': '',
        # Set to empty string for default. Not used with sqlite3.
        'PORT': '',
    }
}


#
# Cache Backend settings
#
# Use local memory caching for development
# https://docs.djangoproject.com/en/dev/topics/cache/#local-memory-caching
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'pootlecache',
    }
}


#
# Site
#

# Mail server settings
#
# By using the 'console' email backend, any emails sent while in development
# mode will be output to stdout.
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Alternatively, you can run a local dummy SMTP server with
#   python -m smtpd -n -c DebuggingServer localhost:1025
# and use the following settings:
#EMAIL_HOST = 'localhost'
#EMAIL_PORT = 1025


#
# Applications
#

#
# webassets
#
# Enable debugging assets.
#
# When this is set, the templates will generate one script/link tag per each
# JavaScript/CSS file instead of putting them in bundles.
# Further details:
#   http://elsdoerfer.name/docs/webassets/django/settings.html
ASSETS_DEBUG = True

# Controls whether bundles should be automatically built and rebuilt. If set to
# ``False`` you'll need to manually generate the bundles with ``manage.py
# assets build``.
ASSETS_AUTO_BUILD = True


#
# Django extensions
#
INSTALLED_APPS += ['django_extensions']


#
# Django debug toolbar
#
# Check its README for further configuration options:
# https://github.com/django-debug-toolbar/django-debug-toolbar/blob/master/README.rst
INSTALLED_APPS += ['debug_toolbar']

MIDDLEWARE_CLASSES += [
  'debug_toolbar.middleware.DebugToolbarMiddleware',
]

DEBUG_TOOLBAR_CONFIG = {
    'INTERCEPT_REDIRECTS': False,
    'HIDE_DJANGO_SQL': True,
}


#
# Translation
#

# The directory where the translation files are kept
PODIRECTORY = working_path('po')

# The directory where version control clones/checkouts are kept
VCS_DIRECTORY = working_path('repos')

# Two-tuple defining the markup filter to apply in certain textareas.
#
# - Accepted values for the first element are 'textile', 'markdown',
#   'restructuredtext' and None.
# - The second element should be a dictionary of keyword arguments that will be
#   passed to the markup function.
#
# IMPORTANT: If you want to use one of these markup filters you must install on
# your own the required packages.
#
# Examples:
#    MARKUP_FILTER = (None, {})
#    MARKUP_FILTER = ('markdown', {'safe_mode': 'escape'})
#    MARKUP_FILTER = ('restructuredtext', {
#                         'settings_overrides': {
#                             'report_level': 'quiet',
#                         }
#                     })
MARKUP_FILTER = (None, {})

# Suggestions through Machine Translation services (service name, API key).
MT_BACKENDS = [
#        ('APERTIUM', ''),
#        ('GOOGLE_TRANSLATE', ''),
]

# Web-based lookup
LOOKUP_BACKENDS = [
#        'wikipedia',
]

# URL for the amaGama TM server.
AMAGAMA_URL = 'http://amagama.locamotion.org/tmserver/'
