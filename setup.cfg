[tool:pytest]
python_files=*.py
addopts=--tb=short --strict
testpaths=tests
norecursedirs=.git _build tmp* requirements commands/*
markers=
    cmd: Django admin commands.
# https://docs.python.org/2/library/warnings.html#the-warnings-filter
filterwarnings =
    # Error by default
    error
    ## Deprecation related issues:
    ## * Not clean:
    ##   - default - in our own code till they are fixed (we can see what we
    ##     need to fix, but builds don't break)
    ##   - ignore - in other's code (no noise please, clean ours first)
    ## * Clean:
    ##   - error - in our own code (don't regress)
    ##   - default - in other's code if they are not fixed.  Be specific about
    ##     what module so we don't allow other brokenness in (able to watch
    ##     others fixing their code, don't hide it)
    ##   - error - if we have no occurances in our's or other's code (keep it
    ##     clean - should essentially not be listed and falls to default error
    ##     behaviour)
    #
    # Sadly can't use RemovedInDjango20Warning directly
    # Not Clean
    #
    # Clean
    default:.*assignment_tag.*::.*socialaccount
    ## Other
    # allauth - these two are deprecated, unused in our code but trigger a
    # false positive.  Likely because of Django template loader simply also
    # loading the deprecated module.
    ignore:.*account_tags.*
    ignore:.*socialaccount_tags.*

[pydocstyle]
inherit=false
# Ignore all preselected error codes
select=
# Known error codes
# https://pydocstyle.readthedocs.io/en/latest/error_codes.html
#
# Descriptions of default ON error codes
# D201 - No blank lines allowed before function docstring
# D204 - 1 blank line required after class docstring
# D206 - Docstring should be indented with spaces, not tabs
# D207 - Docstring is under-indented
# D208 - Docstring is over-indented
# D209 - Multi-line docstring closing quotes should be on a separate line
# D210 - No whitespaces allowed surrounding docstring text
# D211 - No blank lines allowed before class docstring
# D300 - Use """triple double quotes"""
# D301 - Use r""" if any backslashes in a docstring
# D302 - Use u""" for Unicode docstrings
#
# Default OFF
# D202 - No blank lines allowed after function docstring (found 1)
#   - not convinced that this improves readability
# D203 - 1 blank line required before class docstring
#   - incompatible with D211
add-select=D201,D204,D206,D207,D208,D209,D210,D211,D300,D301,D302
# If we need to exlude tests uncomment this
#match-dir=(?!tests).*

[pycodestyle]
max-line-length=84
# .svn,CVS,.bzr,.hg,.git,__pycache__ - restore defaults
# migrations - autogenerated, so we don't really want to edit them
# docs/conf.py - mostly supplied by Sphinx
# _build - documentation build directory
# .tox - exclude any tox installed files
# pootle/static - js, CSS and images
# pootle/translations - project translations
# pootle/locale - Pootle UI translations
# pootle/assets - built static files
# templates - HTML templates
# .eggs - some sideeffect of ./setup.py build
# env - virtualenv likely around from following setup instructions
# build - setuptools build dir
# dist - seuptools dist/ delivery dir
exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,migrations,conf.py,_build,.tox,pootle/static,pootle/translations,pootle/locale,pootle/assets,templates,.eggs,env,build,dist
# E129 visually indented line with same indent as next logical line
#   - No real agreement here.  Best to disable it for now
# E226 missing whitespace around arithmetic operator
#   - This makes split[a+1:b+1] look unreadble as split[a + 1:b + 1]
# E402 module level import not at top of file
#   - There are enough cases where we want to import in a function
# E731 do not assign a lambda expression, use a def
#   - Jury out on this one, there are enough that seem reasonable use of lambda
# W503 line break before binary operator
#   - Jury is out on what is actualy more readable
# Default ignore list for ref E121,E123,E126,E226,E24,E704
ignore=E129,E226,E402,E731,W503
statistics=True

[flake8]
# See [pycodestyle] above, [pycodestyle] is the reference, please keep in sync.
# You would think flake8 would have the decency of reading the pycodestyle
# configs, but it doesn't so we have to repeat them.
max-line-length=84
exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,migrations,conf.py,_build,.tox,pootle/static,pootle/translations,pootle/locale,pootle/assets,templates,.eggs,env,build,dist
# Additional default excludes:
# I - import plugin
# N - naming plugin
ignore=E129,E226,E402,E731,W503,I,N
statistics=True
# /end [pycodestyle] duplication

[isort]
# Settings:
# https://github.com/timothycrosley/isort/wiki/isort-Settings#full-reference-of-isort-settings
line_length=79
# Skip:
## Various other dirs
# - .tox - testing remnants
# - .eggs
# - build,dist - setuptools dirs
# - migrations - Django migrations autogenerated
# - node_modules - we don't care for Python in JS
## Our Pootle related dirs
# - commands - management command have code within import block
# - tests - limit to Pootle code for now
## Specific files
# - conf.py - docs/conf.py, Sphinx one is a mess
# - plugin.py - lots of custom sorting
# - others - can't autosort, manually sorted, try block, or special sorting
skip=.tox,
     .eggs,
     build,
     dist,
     migrations,
     node_modules,
     commands,
     tests,
     conf.py,
     plugin.py,
     pootle/apps/pootle_language/urls.py,
     pootle/apps/pootle_language/views.py,
     pootle/apps/pootle_project/urls.py,
     pootle/apps/pootle_project/views.py,
     pootle/apps/pootle_revision/getters.py,
     pootle/apps/pootle_store/forms.py,
     pootle/apps/pootle_store/getters.py,
     pootle/apps/pootle_store/models.py,
     pootle/apps/pootle_store/unit/results.py,
     pootle/apps/pootle_store/unit/timeline.py,
     pootle/apps/pootle_translationproject/urls.py,
     pootle/apps/pootle_translationproject/views.py,
     pootle/apps/virtualfolder/getters.py,
     pootle/core/management/subcommands.py,
     pootle/core/search/backends/elasticsearch.py,
     pootle/core/utils/version.py,
     pootle/middleware/errorpages.py,

known_standard_library=
known_third_party=elasticsearch,translate
known_django=django
known_djangoexternal=allauth,contact_form,django_rq,django_comments,sortedm2m
known_first_party=staticpages,import_export
default_section=FIRSTPARTY
sections=FUTURE,STDLIB,THIRDPARTY,DJANGO,DJANGOEXTERNAL,FIRSTPARTY,LOCALFOLDER
# Number of spaces you would like to indent by
indent=4
# How you want imports to be displayed if they're long enough to span multiple
# lines. All possible modes can be found
# https://github.com/timothycrosley/isort#multi-line-output-modes.
# 0 - Grid
# from third_party import (lib1, lib2, lib3,
#                          lib4, lib5, ...)
multi_line_output=0
# Separate sections within "from" imports for CONSTANTS, Classes, and
# modules/functions.
order_by_type=True
# Combine as imports on the same line within for import statements. By default
# isort forces all as imports to display on their own lines.
combine_as_imports=True
lines_after_imports=2

[coverage:run]
omit =
    */migrations/*
    setup.py
    .tox/*
    tests/settings.py
    run_coveralls.py
    pootle/strings.py
    pytest_pootle/__init__.py
    pytest_pootle/plugin.py
