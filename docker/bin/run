#!/bin/bash

set -e

CMD="${@:2}";
IMAGE=$1
RUNNER=/app/src/pootle/docker/bin/run_in_container
NO_USERMOD=('demo', 'production')

if [[ !  " ${NO_USERMOD[@]} " =~ " ${IMAGE} " ]]; then
    export LOCAL_USER_ID=${LOCAL_USER_ID:-$UID}
    echo "Setting container $IMAGE user to $LOCAL_USER_ID"
fi

function pull_images () {
    docker-compose pull --include-deps $IMAGE
    run_in_container bash /app/src/pootle/docker/bin/await-db
}

function image_exists() {
    IMAGE_EXISTS=$(docker-compose images -q $IMAGE)
}

function run_in_container () {
    COMPOSE="docker-compose run $FLAGS --rm $IMAGE"
    $COMPOSE $RUNNER "${@:1}";
}

image_exists

if [ -z $IMAGE_EXISTS ]; then
    echo "$IMAGE image does not exist, pulling..."
    pull_images
fi


if [ -z ${CMD:+x} ]; then
    run_in_container pootle revision --restore
    FLAGS=--service-ports run_in_container
else
    run_in_container $CMD;
fi
